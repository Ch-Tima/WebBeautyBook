{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nfunction EmailConfirmationComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"img\", 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmailConfirmationComponent_div_3_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 9);\n  }\n}\nfunction EmailConfirmationComponent_div_3_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 10);\n  }\n}\nfunction EmailConfirmationComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, EmailConfirmationComponent_div_3_img_1_Template, 1, 0, \"img\", 7);\n    i0.ɵɵtemplate(2, EmailConfirmationComponent_div_3_img_2_Template, 1, 0, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSuccess);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isSuccess);\n  }\n}\nfunction EmailConfirmationComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.errorMessage);\n  }\n}\nexport class EmailConfirmationComponent {\n  constructor(auth, router, activityRoute) {\n    this.auth = auth;\n    this.router = router;\n    this.activityRoute = activityRoute;\n    this.isSuccess = null;\n    this.errorMessage = null;\n    //Pulling a token and an email address from a URL\n    const token = this.activityRoute.snapshot.queryParams[\"token\"];\n    const email = this.activityRoute.snapshot.queryParams[\"email\"];\n    //If token or email address not found, redirect to home page\n    if (token == undefined || email == undefined) this.router.navigate([\"/\"]);\n    //Otherwise send token and email address to API\n    this.send(token, email);\n  }\n  send(token, email) {\n    this.auth.emailConfirmation(token, email).subscribe(result => {\n      this.isSuccess = true;\n    }, error => {\n      this.isSuccess = false;\n      this.errorMessage = error.error;\n    });\n  }\n}\nEmailConfirmationComponent.ɵfac = function EmailConfirmationComponent_Factory(t) {\n  return new (t || EmailConfirmationComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nEmailConfirmationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmailConfirmationComponent,\n  selectors: [[\"app-email-confirmation\"]],\n  decls: 5,\n  vars: 3,\n  consts: [[1, \"text-center\", \"h2\", \"my-5\"], [\"class\", \"d-flex\", 4, \"ngIf\"], [\"class\", \"d-flex row\", 4, \"ngIf\"], [\"class\", \"h6 my-5 px-2 text-center text-danger\", 4, \"ngIf\"], [1, \"d-flex\"], [\"src\", \"../../../assets/images/green_checked.png\", 1, \"mx-auto\", \"col-2\", \"col-lg-1\"], [1, \"d-flex\", \"row\"], [\"class\", \"mx-auto col-4 col-sm-4 col-md-3 col-lg-2 col-xl-2\", \"src\", \"../../../assets/images/green_checked.png\", 4, \"ngIf\"], [\"class\", \"mx-auto col-4 col-sm-4 col-md-3 col-lg-2 col-xl-2\", \"src\", \"../../../assets/images/red_cross.png\", 4, \"ngIf\"], [\"src\", \"../../../assets/images/green_checked.png\", 1, \"mx-auto\", \"col-4\", \"col-sm-4\", \"col-md-3\", \"col-lg-2\", \"col-xl-2\"], [\"src\", \"../../../assets/images/red_cross.png\", 1, \"mx-auto\", \"col-4\", \"col-sm-4\", \"col-md-3\", \"col-lg-2\", \"col-xl-2\"], [1, \"h6\", \"my-5\", \"px-2\", \"text-center\", \"text-danger\"]],\n  template: function EmailConfirmationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\", 0);\n      i0.ɵɵtext(1, \"Email Confirmation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, EmailConfirmationComponent_div_2_Template, 2, 0, \"div\", 1);\n      i0.ɵɵtemplate(3, EmailConfirmationComponent_div_3_Template, 3, 2, \"div\", 2);\n      i0.ɵɵtemplate(4, EmailConfirmationComponent_p_4_Template, 2, 1, \"p\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSuccess == null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSuccess != null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage != null);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAEAA,8BAA8C;IAC1CA,yBAAmF;IACvFA,iBAAM;;;;;IAGFA,yBAAgI;;;;;IAChIA,0BAA6H;;;;;IAFjIA,8BAAkD;IAC9CA,iFAAgI;IAChIA,iFAA6H;IACjIA,iBAAM;;;;IAFIA,eAAe;IAAfA,uCAAe;IACfA,eAAgB;IAAhBA,wCAAgB;;;;;IAG1BA,6BAA6E;IAAAA,YAAgB;IAAAA,iBAAI;;;;IAApBA,eAAgB;IAAhBA,yCAAgB;;;ACF7F,OAAM,MAAOC,0BAA0B;EAIrCC,YAAoBC,IAAiB,EAAUC,MAAc,EAAUC,aAA6B;IAAhF,SAAI,GAAJF,IAAI;IAAuB,WAAM,GAANC,MAAM;IAAkB,kBAAa,GAAbC,aAAa;IAHpF,cAAS,GAAiB,IAAI;IAC9B,iBAAY,GAAgB,IAAI;IAG9B;IACA,MAAMC,KAAK,GAAG,IAAI,CAACD,aAAa,CAACE,QAAQ,CAACC,WAAW,CAAC,OAAO,CAAC;IAC9D,MAAMC,KAAK,GAAG,IAAI,CAACJ,aAAa,CAACE,QAAQ,CAACC,WAAW,CAAC,OAAO,CAAC;IAE9D;IACA,IAAGF,KAAK,IAAII,SAAS,IAAID,KAAK,IAAIC,SAAS,EAAE,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAExE;IACA,IAAI,CAACC,IAAI,CAACN,KAAK,EAAEG,KAAK,CAAC;EACzB;EAEQG,IAAI,CAACN,KAAa,EAAEG,KAAY;IACtC,IAAI,CAACN,IAAI,CAACU,iBAAiB,CAACP,KAAK,EAAEG,KAAK,CAAC,CAACK,SAAS,CACjDC,MAAM,IAAG;MACP,IAAI,CAACC,SAAS,GAAG,IAAI;IACvB,CAAC,EAACC,KAAK,IAAG;MACR,IAAI,CAACD,SAAS,GAAG,KAAK;MACtB,IAAI,CAACE,YAAY,GAAGD,KAAK,CAACA,KAAK;IACjC,CAAC,CACF;EACH;;AAzBWhB,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;QAA1BA,0BAA0B;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTvCvB,4BAA+B;MAAAA,kCAAkB;MAAAA,iBAAI;MAErDA,2EAEM;MAENA,2EAGM;MAENA,uEAAiG;;;MAT3FA,eAAuB;MAAvBA,4CAAuB;MAIvBA,eAAuB;MAAvBA,4CAAuB;MAKzBA,eAA0B;MAA1BA,+CAA0B","names":["i0","EmailConfirmationComponent","constructor","auth","router","activityRoute","token","snapshot","queryParams","email","undefined","navigate","send","emailConfirmation","subscribe","result","isSuccess","error","errorMessage","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\chizh\\source\\repos\\WebBeautyBook\\WebBeautyBook\\ClientApp\\src\\app\\auth\\email-confirmation\\email-confirmation.component.html","C:\\Users\\chizh\\source\\repos\\WebBeautyBook\\WebBeautyBook\\ClientApp\\src\\app\\auth\\email-confirmation\\email-confirmation.component.ts"],"sourcesContent":["<p class=\"text-center h2 my-5\">Email Confirmation</p>\r\n\r\n<div *ngIf=\"isSuccess == null\" class=\"d-flex\">\r\n    <img class=\"mx-auto col-2 col-lg-1\" src=\"../../../assets/images/green_checked.png\">\r\n</div>\r\n\r\n<div *ngIf=\"isSuccess != null\" class=\"d-flex row\">\r\n    <img *ngIf=\"isSuccess\" class=\"mx-auto col-4 col-sm-4 col-md-3 col-lg-2 col-xl-2\" src=\"../../../assets/images/green_checked.png\">\r\n    <img *ngIf=\"!isSuccess\" class=\"mx-auto col-4 col-sm-4 col-md-3 col-lg-2 col-xl-2\" src=\"../../../assets/images/red_cross.png\">\r\n</div>\r\n\r\n<p *ngIf=\"errorMessage != null\" class=\"h6 my-5 px-2 text-center text-danger\">{{errorMessage}}</p>","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-email-confirmation',\r\n  templateUrl: './email-confirmation.component.html',\r\n  styleUrls: ['./email-confirmation.component.css']\r\n})\r\nexport class EmailConfirmationComponent {\r\n  isSuccess: boolean|null = null;\r\n  errorMessage: string|null = null;\r\n\r\n  constructor(private auth: AuthService, private router: Router, private activityRoute: ActivatedRoute) { \r\n    //Pulling a token and an email address from a URL\r\n    const token = this.activityRoute.snapshot.queryParams[\"token\"];\r\n    const email = this.activityRoute.snapshot.queryParams[\"email\"];\r\n    \r\n    //If token or email address not found, redirect to home page\r\n    if(token == undefined || email == undefined) this.router.navigate([\"/\"]);\r\n\r\n    //Otherwise send token and email address to API\r\n    this.send(token, email);\r\n  }\r\n\r\n  private send(token: string, email:string){\r\n    this.auth.emailConfirmation(token, email).subscribe(\r\n      result => {\r\n        this.isSuccess = true;\r\n      },error => {\r\n        this.isSuccess = false;\r\n        this.errorMessage = error.error;\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}