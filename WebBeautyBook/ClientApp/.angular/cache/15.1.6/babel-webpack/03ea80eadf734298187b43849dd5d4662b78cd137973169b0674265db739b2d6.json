{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nlet NavLeftMenuComponent = class NavLeftMenuComponent {\n  constructor(nav, breakpointObserver) {\n    this.nav = nav;\n    this.breakpointObserver = breakpointObserver;\n    this.list = [];\n    this.headerText = \"Menu\";\n    this.resultEmitter = new EventEmitter();\n    this.breakpoint$ = this.breakpointObserver.observe([Breakpoints.Large, Breakpoints.Medium, Breakpoints.Small, '(min-width: 500px)']).pipe(tap(value => console.log(value)), distinctUntilChanged());\n  }\n  ngOnDestroy() {}\n  ngAfterViewInit() {}\n  ngOnInit() {}\n  onClick(event, value) {}\n};\n__decorate([Input()], NavLeftMenuComponent.prototype, \"list\", void 0);\n__decorate([Input()], NavLeftMenuComponent.prototype, \"headerText\", void 0);\n__decorate([Output()], NavLeftMenuComponent.prototype, \"resultEmitter\", void 0);\nNavLeftMenuComponent = __decorate([Component({\n  selector: 'app-nav-left-menu',\n  templateUrl: './nav-left-menu.component.html',\n  styleUrls: ['./nav-left-menu.component.css']\n})], NavLeftMenuComponent);\nexport { NavLeftMenuComponent };\nexport class NavmMenuItem {\n  constructor(iconPath, title, value) {\n    this.iconPath = iconPath;\n    this.title = title;\n    this.value = value;\n  }\n}","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAqBC,MAAM,QAAuB,eAAe;AAQjG,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAW/BC,YAAoBC,GAAkB,EAAUC,kBAAqC;IAAjE,QAAG,GAAHD,GAAG;IAAyB,uBAAkB,GAAlBC,kBAAkB;IAP3D,SAAI,GAAmB,EAAE;IAEzB,eAAU,GAAW,MAAM;IAGlC,kBAAa,GAAG,IAAIN,YAAY,EAAU;IAMjC,gBAAW,GAAG,IAAI,CAACM,kBAAkB,CAC7CC,OAAO,CAAC,CAACC,WAAW,CAACC,KAAK,EAAED,WAAW,CAACE,MAAM,EAAEF,WAAW,CAACG,KAAK,EAAE,oBAAoB,CAAC,CAAC,CACzFC,IAAI,CACHC,GAAG,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,EAChCG,oBAAoB,EAAE,CACvB;EAPD;EASAC,WAAW,IAEX;EACAC,eAAe,IAEf;EACAC,QAAQ,IAER;EAEOC,OAAO,CAACC,KAAU,EAAER,KAAa,GAExC;CAED;AAhCCS,YADCtB,KAAK,EAAE,kDACyB;AAEjCsB,YADCtB,KAAK,EAAE,wDAC2B;AAGnCsB,YADCrB,MAAM,EAAE,2DACkC;AAThCC,oBAAoB,eALhCJ,SAAS,CAAC;EACTyB,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,GACWvB,oBAAoB,CAoChC;SApCYA,oBAAoB;AAsCjC,OAAM,MAAOwB,YAAY;EAKvBvB,YAAYwB,QAAgB,EAAEC,KAAa,EAAEf,KAAa;IACxD,IAAI,CAACc,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACf,KAAK,GAAGA,KAAK;EACpB","names":["Component","EventEmitter","Input","Output","NavLeftMenuComponent","constructor","nav","breakpointObserver","observe","Breakpoints","Large","Medium","Small","pipe","tap","value","console","log","distinctUntilChanged","ngOnDestroy","ngAfterViewInit","ngOnInit","onClick","event","__decorate","selector","templateUrl","styleUrls","NavmMenuItem","iconPath","title"],"sourceRoot":"","sources":["C:\\Users\\chizh\\source\\repos\\WebBeautyBook\\WebBeautyBook\\ClientApp\\src\\app\\nav-left-menu\\nav-left-menu.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, AfterViewInit } from '@angular/core';\nimport { NavbarService } from '../services/navbar.service';\n\n@Component({\n  selector: 'app-nav-left-menu',\n  templateUrl: './nav-left-menu.component.html',\n  styleUrls: ['./nav-left-menu.component.css']\n})\nexport class NavLeftMenuComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  \n  @Input()\n  public list: NavmMenuItem[] = [];\n  @Input()\n  public headerText: string = \"Menu\";\n\n  @Output() \n  resultEmitter = new EventEmitter<string>();\n\n  constructor(private nav: NavbarService, private breakpointObserver: ReportingObserver){\n\n  }\n\n  readonly breakpoint$ = this.breakpointObserver\n  .observe([Breakpoints.Large, Breakpoints.Medium, Breakpoints.Small, '(min-width: 500px)'])\n  .pipe(\n    tap(value => console.log(value)),\n    distinctUntilChanged()\n  );\n\n  ngOnDestroy(): void {\n\n  }\n  ngAfterViewInit(): void {\n\n  }\n  ngOnInit(): void {\n\n  }\n\n  public onClick(event: any, value: string){\n    \n  }\n\n}\n\nexport class NavmMenuItem{\n  iconPath: string\n  title: string\n  value: string\n\n  constructor(iconPath: string, title: string, value: string){\n    this.iconPath = iconPath;\n    this.title = title;\n    this.value = value;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}