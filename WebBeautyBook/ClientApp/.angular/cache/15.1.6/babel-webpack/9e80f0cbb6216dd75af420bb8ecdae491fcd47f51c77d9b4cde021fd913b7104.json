{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CompareValidator } from 'src/app/validators/CompareValidator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterPageComponent_input_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 16);\n  }\n}\nfunction RegisterPageComponent_div_9_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPageComponent_div_9_small_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"This isn't an email address.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPageComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 17);\n    i0.ɵɵtemplate(2, RegisterPageComponent_div_9_small_2_Template, 2, 0, \"small\", 18);\n    i0.ɵɵtemplate(3, RegisterPageComponent_div_9_small_3_Template, 2, 0, \"small\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.mForm.controls[\"email\"].errors == null ? null : ctx_r1.mForm.controls[\"email\"].errors[\"required\"]) != undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.mForm.controls[\"email\"].errors == null ? null : ctx_r1.mForm.controls[\"email\"].errors[\"email\"]) != undefined);\n  }\n}\nfunction RegisterPageComponent_div_14_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPageComponent_div_14_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"The 'Name' must be between 4 and 100 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPageComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterPageComponent_div_14_small_1_Template, 2, 0, \"small\", 18);\n    i0.ɵɵtemplate(2, RegisterPageComponent_div_14_small_2_Template, 2, 0, \"small\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.mForm.controls[\"userName\"].errors[\"required\"] != undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.mForm.controls[\"userName\"].errors[\"maxlength\"] != undefined || ctx_r2.mForm.controls[\"userName\"].errors[\"minlength\"] != undefined);\n  }\n}\nfunction RegisterPageComponent_div_19_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"Surname is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPageComponent_div_19_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"The 'Surname' must be between 4 and 100 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPageComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterPageComponent_div_19_small_1_Template, 2, 0, \"small\", 18);\n    i0.ɵɵtemplate(2, RegisterPageComponent_div_19_small_2_Template, 2, 0, \"small\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.mForm.controls[\"userSurname\"].errors[\"required\"] != undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.mForm.controls[\"userSurname\"].errors[\"maxlength\"] != undefined || ctx_r3.mForm.controls[\"userSurname\"].errors[\"minlength\"] != undefined);\n  }\n}\nfunction RegisterPageComponent_div_24_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPageComponent_div_24_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"The minimum Password length is 6 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPageComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterPageComponent_div_24_small_1_Template, 2, 0, \"small\", 18);\n    i0.ɵɵtemplate(2, RegisterPageComponent_div_24_small_2_Template, 2, 0, \"small\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.mForm.controls[\"password\"].errors[\"required\"] != undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.mForm.controls[\"password\"].errors[\"maxlength\"] != undefined || ctx_r4.mForm.controls[\"password\"].errors[\"minlength\"] != undefined);\n  }\n}\nfunction RegisterPageComponent_div_29_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"ConfirmPassword and Password do not match.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPageComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterPageComponent_div_29_small_1_Template, 2, 0, \"small\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.mForm.controls[\"confirmPassword\"].errors[\"confirmedValidator\"] != undefined);\n  }\n}\nfunction RegisterPageComponent_p_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.lastErrorMessage);\n  }\n}\nfunction RegisterPageComponent_button_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵtext(1, \"SignUp\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPageComponent_button_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵtext(1, \"SignUp\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPageComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Already have an account? \");\n    i0.ɵɵelementStart(2, \"a\", 22);\n    i0.ɵɵtext(3, \"Login\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class RegisterPageComponent {\n  constructor(auth, formBuilder, router) {\n    this.auth = auth;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.styleContainer = \"container\";\n    this.defaultRole = 'client';\n    this.redirectSuccess = true;\n    this.header = \"Create An Account\";\n    this.showLinkToLogin = true;\n    this.resultEmitter = new EventEmitter();\n    this.mForm = new FormGroup({});\n    this.lastErrorMessage = \"\";\n    this.mForm = formBuilder.group({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      userName: new FormControl('', [Validators.required, Validators.maxLength(100), Validators.minLength(4)]),\n      userSurname: new FormControl('', [Validators.required, Validators.maxLength(100), Validators.minLength(4)]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      confirmPassword: new FormControl('', [Validators.required]),\n      role: new FormControl(this.defaultRole, [Validators.required])\n    }, {\n      validator: CompareValidator(\"password\", \"confirmPassword\")\n    });\n  }\n  ngOnInit() {\n    if (this.defaultRole != '') this.mForm.controls['role'].setValue(this.defaultRole);\n  }\n  onSubmit() {\n    if (this.defaultRole == \"own_company\") this.registerOwnCompany();else if (this.defaultRole == \"manager\" || this.defaultRole == \"worker\") this.registerWorker();else this.registerNormalPeople();\n  }\n  registerNormalPeople() {\n    if (!this.mForm.valid) {\n      console.log(\"Error!\");\n      console.log(this.mForm);\n    } else {\n      this.auth.register(this.mForm.value).subscribe(result => {\n        console.log(result);\n        this.mForm.reset();\n        if (this.redirectSuccess) this.router.navigate([\"login\"]);\n      }, error => {\n        console.log(error);\n        this.lastErrorMessage = error.error;\n      });\n    }\n  }\n  registerOwnCompany() {\n    var requst = this.auth.registerOwnCompany(this.mForm.value);\n    if (requst == null) alert(\"What are you doing here?\");else {\n      requst.subscribe(result => {\n        this.resultEmitter.emit(result);\n        this.mForm.reset();\n      }, error => {\n        this.lastErrorMessage = error.error;\n      });\n    }\n  }\n  registerWorker() {\n    var requst = this.auth.registerWorker(this.mForm.value);\n    if (requst == null) alert(\"What are you doing here?\");else {\n      requst.subscribe(result => {\n        this.resultEmitter.emit(result);\n        this.mForm.reset();\n      }, error => {\n        this.lastErrorMessage = error.error;\n      });\n    }\n  }\n}\nRegisterPageComponent.ɵfac = function RegisterPageComponent_Factory(t) {\n  return new (t || RegisterPageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nRegisterPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterPageComponent,\n  selectors: [[\"app-register-page\"]],\n  inputs: {\n    styleContainer: \"styleContainer\",\n    defaultRole: \"defaultRole\",\n    redirectSuccess: \"redirectSuccess\",\n    header: \"header\",\n    showLinkToLogin: \"showLinkToLogin\"\n  },\n  outputs: {\n    resultEmitter: \"resultEmitter\"\n  },\n  decls: 34,\n  vars: 15,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-4\", \"mb-3\"], [\"for\", \"email\"], [\"formControlName\", \"email\", \"class\", \"form-control\", \"type\", \"text\", 4, \"ngIf\"], [4, \"ngIf\"], [\"for\", \"userName\"], [\"formControlName\", \"userName\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"userSurname\"], [\"formControlName\", \"userSurname\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"type\", \"password\", 1, \"form-control\"], [\"for\", \"confirmPassword\"], [\"formControlName\", \"confirmPassword\", \"type\", \"password\", 1, \"form-control\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"class\", \"btn btn-primary\", \"type\", \"submit\", \"disabled\", \"\", 4, \"ngIf\"], [\"class\", \"btn btn-primary\", \"type\", \"submit\", 4, \"ngIf\"], [\"formControlName\", \"email\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"email\", \"type\", \"text\", 1, \"form-control\", \"is-invalid\"], [\"style\", \"color:red\", 4, \"ngIf\"], [2, \"color\", \"red\"], [\"type\", \"submit\", \"disabled\", \"\", 1, \"btn\", \"btn-primary\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/login\"]],\n  template: function RegisterPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterPageComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\")(5, \"div\", 1)(6, \"label\", 2);\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, RegisterPageComponent_input_8_Template, 1, 0, \"input\", 3);\n      i0.ɵɵtemplate(9, RegisterPageComponent_div_9_Template, 4, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 5);\n      i0.ɵɵtext(12, \"UserName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵtemplate(14, RegisterPageComponent_div_14_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 7);\n      i0.ɵɵtext(17, \"UserSurname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵtemplate(19, RegisterPageComponent_div_19_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 1)(21, \"label\", 9);\n      i0.ɵɵtext(22, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 10);\n      i0.ɵɵtemplate(24, RegisterPageComponent_div_24_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 1)(26, \"label\", 11);\n      i0.ɵɵtext(27, \"ConfirmPassword\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 12);\n      i0.ɵɵtemplate(29, RegisterPageComponent_div_29_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(30, RegisterPageComponent_p_30_Template, 2, 1, \"p\", 13);\n      i0.ɵɵtemplate(31, RegisterPageComponent_button_31_Template, 2, 0, \"button\", 14);\n      i0.ɵɵtemplate(32, RegisterPageComponent_button_32_Template, 2, 0, \"button\", 15);\n      i0.ɵɵtemplate(33, RegisterPageComponent_span_33_Template, 4, 0, \"span\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMapInterpolate1(\"\", ctx.styleContainer, \" my-2\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.header);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.mForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.mForm.controls[\"email\"].valid || !ctx.mForm.controls[\"email\"].touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.mForm.controls[\"email\"].valid && ctx.mForm.controls[\"email\"].touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.mForm.controls[\"userName\"].errors != null && ctx.mForm.controls[\"userName\"].touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.mForm.controls[\"userSurname\"].errors != null && ctx.mForm.controls[\"userSurname\"].touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.mForm.controls[\"password\"].errors != null && ctx.mForm.controls[\"password\"].touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.mForm.controls[\"confirmPassword\"].errors != null && ctx.mForm.controls[\"confirmPassword\"].touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.lastErrorMessage != \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.mForm.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.mForm.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLinkToLogin);\n    }\n  },\n  dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","FormControl","FormGroup","Validators","CompareValidator","i0","RegisterPageComponent","constructor","auth","formBuilder","router","mForm","group","email","required","userName","maxLength","minLength","userSurname","password","confirmPassword","role","defaultRole","validator","ngOnInit","controls","setValue","onSubmit","registerOwnCompany","registerWorker","registerNormalPeople","valid","console","log","register","value","subscribe","result","reset","redirectSuccess","navigate","error","lastErrorMessage","requst","alert","resultEmitter","emit","selectors","inputs","styleContainer","header","showLinkToLogin","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\chizh\\source\\repos\\WebBeautyBook\\WebBeautyBook\\ClientApp\\src\\app\\auth\\register-page\\register-page.component.ts","C:\\Users\\chizh\\source\\repos\\WebBeautyBook\\WebBeautyBook\\ClientApp\\src\\app\\auth\\register-page\\register-page.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserDataModel } from 'src/app/models/UserDataModel';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CompareValidator } from 'src/app/validators/CompareValidator';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent implements OnInit {\n\n  @Input() styleContainer : \"container-fluid\" | \"container\" = \"container\"\n  @Input() defaultRole: string = 'client';\n  @Input() redirectSuccess = true;\n  @Input() header:string = \"Create An Account\";\n  @Input() showLinkToLogin: boolean = true;\n\n  @Output() resultEmitter = new EventEmitter<UserDataModel>();\n\n  mForm: FormGroup = new FormGroup({});\n  lastErrorMessage: string = \"\";\n\n  constructor(private auth: AuthService, private formBuilder: FormBuilder, private router: Router)\n  {\n    this.mForm = formBuilder.group({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      userName: new FormControl('', [Validators.required, Validators.maxLength(100), Validators.minLength(4)]),\n      userSurname: new FormControl('', [Validators.required, Validators.maxLength(100), Validators.minLength(4)]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      confirmPassword: new FormControl('', [Validators.required]),\n      role: new FormControl(this.defaultRole, [Validators.required])\n    }, {\n      validator: CompareValidator(\"password\", \"confirmPassword\")\n    });\n  }\n  \n\n  ngOnInit(): void {\n    if(this.defaultRole != '') this.mForm.controls['role'].setValue(this.defaultRole);\n  }\n\n  onSubmit() {\n    if(this.defaultRole == \"own_company\") this.registerOwnCompany();\n    else if(this.defaultRole == \"manager\" || this.defaultRole == \"worker\") this.registerWorker();\n    else this.registerNormalPeople();\n  }\n\n  private registerNormalPeople(){\n    if (!this.mForm.valid) {\n      console.log(\"Error!\");\n      console.log(this.mForm);\n    } else {\n      this.auth.register(this.mForm.value)\n        .subscribe(result => {\n          console.log(result);\n          this.mForm.reset();\n          if(this.redirectSuccess) this.router.navigate([\"login\"]);\n        }, error => {\n          console.log(error);\n          this.lastErrorMessage = error.error;\n        }); \n    }\n  }\n\n  private registerOwnCompany(){\n    var requst = this.auth.registerOwnCompany(this.mForm.value);\n    if(requst == null) alert(\"What are you doing here?\");\n    else{\n      requst.subscribe(\n        result => {\n          this.resultEmitter.emit(result);\n          this.mForm.reset();\n        }, error => {\n          this.lastErrorMessage = error.error;\n        }\n      );\n    }\n  }\n\n  private registerWorker(){\n    var requst = this.auth.registerWorker(this.mForm.value);\n    if(requst == null) alert(\"What are you doing here?\");\n    else{\n      requst.subscribe(\n        result => {\n          this.resultEmitter.emit(result);\n          this.mForm.reset();\n        }, error => {\n          this.lastErrorMessage = error.error;\n        }\n      );\n    }\n  }\n\n}\n","<div class=\"{{styleContainer}} my-2\">\r\n    <h3>{{header}}</h3>\r\n    <form [formGroup]=\"mForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div>\r\n\r\n\r\n        <div class=\"col-md-4 mb-3\">\r\n          <label for=\"email\">Email</label>\r\n          <input formControlName=\"email\" class=\"form-control\" type=\"text\" *ngIf=\"mForm.controls['email'].valid || !mForm.controls['email'].touched\">\r\n          <div *ngIf=\"!mForm.controls['email'].valid && mForm.controls['email'].touched\">\r\n            <input formControlName=\"email\" class=\"form-control is-invalid\" type=\"text\">\r\n            <small style=\"color:red\" *ngIf=\"mForm.controls['email'].errors?.['required'] != undefined\">Email is required.</small>\r\n            <small style=\"color:red\" *ngIf=\"mForm.controls['email'].errors?.['email'] != undefined\">This isn't an email address.</small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-4 mb-3\">\r\n          <label for=\"userName\">UserName</label>\r\n          <input formControlName=\"userName\" class=\"form-control\" type=\"text\">\r\n          <div *ngIf=\"mForm.controls['userName'].errors != null && mForm.controls['userName'].touched\">\r\n            <small style=\"color:red\" *ngIf=\"mForm.controls['userName'].errors['required'] != undefined\">Name is required.</small>\r\n            <small style=\"color:red\" *ngIf=\"mForm.controls['userName'].errors['maxlength'] != undefined || mForm.controls['userName'].errors['minlength'] != undefined\">The 'Name' must be between 4 and 100 characters.</small>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"col-md-4 mb-3\">\r\n          <label for=\"userSurname\">UserSurname</label>\r\n          <input formControlName=\"userSurname\" class=\"form-control\" type=\"text\">\r\n          <div *ngIf=\"mForm.controls['userSurname'].errors != null && mForm.controls['userSurname'].touched\">\r\n            <small style=\"color:red\" *ngIf=\"mForm.controls['userSurname'].errors['required'] != undefined\">Surname is required.</small>\r\n            <small style=\"color:red\" *ngIf=\"mForm.controls['userSurname'].errors['maxlength'] != undefined || mForm.controls['userSurname'].errors['minlength'] != undefined\">The 'Surname' must be between 4 and 100 characters.</small>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"col-md-4 mb-3\">\r\n          <label for=\"password\">Password</label>\r\n          <input formControlName=\"password\" class=\"form-control\" type=\"password\">\r\n          <div *ngIf=\"mForm.controls['password'].errors != null && mForm.controls['password'].touched\">\r\n            <small style=\"color:red\" *ngIf=\"mForm.controls['password'].errors['required'] != undefined\">Password is required.</small>\r\n            <small style=\"color:red\" *ngIf=\"mForm.controls['password'].errors['maxlength'] != undefined || mForm.controls['password'].errors['minlength'] != undefined\">The minimum Password length is 6 characters.</small>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"col-md-4 mb-3\">\r\n          <label for=\"confirmPassword\">ConfirmPassword</label>\r\n          <input formControlName=\"confirmPassword\" class=\"form-control\" type=\"password\">\r\n          <div *ngIf=\"mForm.controls['confirmPassword'].errors != null && mForm.controls['confirmPassword'].touched\">\r\n            <small style=\"color:red\" *ngIf=\"mForm.controls['confirmPassword'].errors['confirmedValidator'] != undefined\">ConfirmPassword and Password do not match.</small>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n  \r\n      <p *ngIf=\"lastErrorMessage != ''\" style=\"color: red;\">{{lastErrorMessage}}</p>\r\n  \r\n      <button *ngIf=\"!mForm.valid\" class=\"btn btn-primary\" type=\"submit\" disabled>SignUp</button>\r\n      <button *ngIf=\"mForm.valid\" class=\"btn btn-primary\" type=\"submit\">SignUp</button>\r\n  \r\n      <span *ngIf=\"showLinkToLogin\">\r\n        Already have an account?\r\n        <a routerLink=\"/login\">Login</a>\r\n      </span>\r\n    </form>\r\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}