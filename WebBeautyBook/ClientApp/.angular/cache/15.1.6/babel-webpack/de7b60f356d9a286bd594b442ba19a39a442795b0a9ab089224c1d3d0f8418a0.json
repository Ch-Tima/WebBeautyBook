{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nconst routes = [\n//Public\n{\n  path: '',\n  component: HomeComponent,\n  pathMatch: 'full'\n}, {\n  path: 'company',\n  component: PublicCompanyComponent\n},\n//Private\n{\n  path: \"myCompany\",\n  component: MyCompanyComponent\n},\n//UserProfile\n{\n  path: \"profile\",\n  component: ProfileComponent\n},\n//AdminPanel\n{\n  path: \"adminPanel\",\n  component: AdminPanelComponent\n},\n//Auth\n{\n  path: \"login\",\n  component: LoginPageComponent\n}, {\n  path: \"register\",\n  component: RegisterPageComponent\n}, {\n  path: \"forgotPassword\",\n  component: ForgotPasswordComponent\n}, {\n  path: \"resetPassword\",\n  component: ResetPasswordComponent\n}, {\n  path: \"emailConfirmation\",\n  component: EmailConfirmationComponent\n}];\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, NavMenuComponent, HomeComponent, CounterComponent, FetchDataComponent, RegisterPageComponent, LoginPageComponent],\n  imports: [BrowserModule.withServerTransition({\n    appId: 'ng-cli-universal'\n  }), HttpClientModule, FormsModule, RouterModule.forRoot(routes)],\n  providers: [],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":{"version":3,"mappings":";AAAA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,qBAAqB,QAAQ,yCAAyC;AAC/E,SAASC,kBAAkB,QAAQ,mCAAmC;AAGtE,MAAMC,MAAM,GAAW;AACrB;AACA;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEP,aAAa;EAAEQ,SAAS,EAAE;AAAM,CAAE,EACzD;EAAEF,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEE;AAAsB,CAAC;AAErD;AACA;EAAEH,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEG;AAAkB,CAAC;AAEnD;AACA;EAAEJ,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEI;AAAgB,CAAE;AAEhD;AACA;EAAEL,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEK;AAAmB,CAAE;AAEtD;AACA;EAAEN,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEH;AAAkB,CAAC,EAC/C;EAAEE,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEJ;AAAqB,CAAE,EACtD;EAAEG,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAEM;AAAuB,CAAE,EAC9D;EAAEP,IAAI,EAAE,eAAe;EAAEC,SAAS,EAAEO;AAAsB,CAAE,EAC5D;EAAER,IAAI,EAAE,mBAAmB;EAAEC,SAAS,EAAEQ;AAA0B,CAAE,CAErE;AAqBM,IAAMC,SAAS,GAAf,MAAMA,SAAS,GAAI;AAAbA,SAAS,eAnBrBtB,QAAQ,CAAC;EACRuB,YAAY,EAAE,CACZnB,YAAY,EACZC,gBAAgB,EAChBC,aAAa,EACbC,gBAAgB,EAChBC,kBAAkB,EAClBC,qBAAqB,EACrBC,kBAAkB,CACnB;EACDc,OAAO,EAAE,CACPzB,aAAa,CAAC0B,oBAAoB,CAAC;IAAEC,KAAK,EAAE;EAAkB,CAAE,CAAC,EACjExB,gBAAgB,EAChBD,WAAW,EACXE,YAAY,CAACwB,OAAO,CAAChB,MAAM,CAAC,CAC7B;EACDiB,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,CAACzB,YAAY;CACzB,CAAC,GACWkB,SAAS,CAAI;SAAbA,SAAS","names":["BrowserModule","NgModule","FormsModule","HttpClientModule","RouterModule","AppComponent","NavMenuComponent","HomeComponent","CounterComponent","FetchDataComponent","RegisterPageComponent","LoginPageComponent","routes","path","component","pathMatch","PublicCompanyComponent","MyCompanyComponent","ProfileComponent","AdminPanelComponent","ForgotPasswordComponent","ResetPasswordComponent","EmailConfirmationComponent","AppModule","declarations","imports","withServerTransition","appId","forRoot","providers","bootstrap"],"sourceRoot":"","sources":["C:\\Users\\chizh\\source\\repos\\WebBeautyBook\\WebBeautyBook\\ClientApp\\src\\app\\app.module.ts"],"sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { RegisterPageComponent } from './register-page/register-page.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  //Public\r\n  { path: '', component: HomeComponent, pathMatch: 'full' },\r\n  { path: 'company', component: PublicCompanyComponent},\r\n\r\n  //Private\r\n  { path: \"myCompany\", component: MyCompanyComponent},\r\n\r\n  //UserProfile\r\n  { path: \"profile\", component: ProfileComponent },\r\n\r\n  //AdminPanel\r\n  { path: \"adminPanel\", component: AdminPanelComponent },\r\n\r\n  //Auth\r\n  { path: \"login\", component: LoginPageComponent},\r\n  { path: \"register\", component: RegisterPageComponent },\r\n  { path: \"forgotPassword\", component: ForgotPasswordComponent },\r\n  { path: \"resetPassword\", component: ResetPasswordComponent },\r\n  { path: \"emailConfirmation\", component: EmailConfirmationComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    RegisterPageComponent,\r\n    LoginPageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}