{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginPageComponent_input_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 13);\n  }\n}\nfunction LoginPageComponent_div_11_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 16);\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_div_11_small_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 16);\n    i0.ɵɵtext(1, \"This isn't an email address.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 14);\n    i0.ɵɵtemplate(2, LoginPageComponent_div_11_small_2_Template, 2, 0, \"small\", 15);\n    i0.ɵɵtemplate(3, LoginPageComponent_div_11_small_3_Template, 2, 0, \"small\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.mForm.controls[\"email\"].errors == null ? null : ctx_r1.mForm.controls[\"email\"].errors[\"required\"]) != undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.mForm.controls[\"email\"].errors == null ? null : ctx_r1.mForm.controls[\"email\"].errors[\"email\"]) != undefined);\n  }\n}\nfunction LoginPageComponent_input_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 17);\n  }\n}\nfunction LoginPageComponent_div_16_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 16);\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 18);\n    i0.ɵɵtemplate(2, LoginPageComponent_div_16_small_2_Template, 2, 0, \"small\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r3.mForm.controls[\"password\"].errors == null ? null : ctx_r3.mForm.controls[\"password\"].errors[\"required\"]) != undefined);\n  }\n}\nfunction LoginPageComponent_p_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.lastErrorMessage);\n  }\n}\nfunction LoginPageComponent_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵtext(1, \"SignIn\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵtext(1, \"SignIn\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginPageComponent {\n  constructor(auth, formBuilder, router) {\n    this.auth = auth;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.lastErrorMessage = \"\";\n    if (auth.hasToken()) router.navigate([\"/\"]);\n    this.mForm = formBuilder.group({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  onSubmit() {\n    if (!this.mForm.valid) {\n      console.log(\"Error!\");\n      console.log(this.mForm);\n    } else {\n      console.log(\"Send!\");\n      this.auth.login(this.mForm.value).subscribe(resut => {\n        this.mForm.reset();\n        this.auth.saveToken(resut.token, resut.expiration);\n        window.location.replace(\"\");\n      }, error => {\n        this.lastErrorMessage = error.error;\n        console.log(error);\n      });\n    }\n  }\n}\nLoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPageComponent,\n  selectors: [[\"app-login-page\"]],\n  decls: 28,\n  vars: 8,\n  consts: [[1, \"container\", \"my-2\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-4\", \"mb-3\"], [\"for\", \"email\"], [\"formControlName\", \"email\", \"class\", \"form-control\", \"type\", \"text\", 4, \"ngIf\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"class\", \"form-control\", \"type\", \"password\", 4, \"ngIf\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"class\", \"btn btn-primary\", \"type\", \"submit\", 4, \"ngIf\"], [\"class\", \"btn btn-primary\", \"type\", \"submit\", \"disabled\", \"\", 4, \"ngIf\"], [\"routerLink\", \"/register\"], [\"routerLink\", \"/forgotPassword\"], [\"formControlName\", \"email\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"email\", \"type\", \"text\", 1, \"form-control\", \"is-invalid\"], [\"style\", \"color:red\", 4, \"ngIf\"], [2, \"color\", \"red\"], [\"formControlName\", \"password\", \"type\", \"password\", 1, \"form-control\"], [\"formControlName\", \"password\", \"type\", \"password\", 1, \"form-control\", \"is-invalid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"submit\", \"disabled\", \"\", 1, \"btn\", \"btn-primary\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Hi Welcome Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"h3\");\n      i0.ɵɵtext(4, \"Login Here\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\")(7, \"div\", 2)(8, \"label\", 3);\n      i0.ɵɵtext(9, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, LoginPageComponent_input_10_Template, 1, 0, \"input\", 4);\n      i0.ɵɵtemplate(11, LoginPageComponent_div_11_Template, 4, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 6);\n      i0.ɵɵtext(14, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, LoginPageComponent_input_15_Template, 1, 0, \"input\", 7);\n      i0.ɵɵtemplate(16, LoginPageComponent_div_16_Template, 3, 1, \"div\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(17, LoginPageComponent_p_17_Template, 2, 1, \"p\", 8);\n      i0.ɵɵtemplate(18, LoginPageComponent_button_18_Template, 2, 0, \"button\", 9);\n      i0.ɵɵtemplate(19, LoginPageComponent_button_19_Template, 2, 0, \"button\", 10);\n      i0.ɵɵelementStart(20, \"span\");\n      i0.ɵɵtext(21, \" Don't have an account? \");\n      i0.ɵɵelementStart(22, \"a\", 11);\n      i0.ɵɵtext(23, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"span\");\n      i0.ɵɵelement(25, \"p\");\n      i0.ɵɵelementStart(26, \"a\", 12);\n      i0.ɵɵtext(27, \"Forgot password?\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.mForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.mForm.controls[\"email\"].valid || !ctx.mForm.controls[\"email\"].touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.mForm.controls[\"email\"].valid && ctx.mForm.controls[\"email\"].touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.mForm.controls[\"password\"].valid || !ctx.mForm.controls[\"password\"].touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.mForm.controls[\"password\"].valid && ctx.mForm.controls[\"password\"].touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.lastErrorMessage != \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.mForm.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.mForm.valid);\n    }\n  },\n  dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","i0","LoginPageComponent","constructor","auth","formBuilder","router","hasToken","navigate","mForm","group","email","required","password","onSubmit","valid","console","log","login","value","subscribe","resut","reset","saveToken","token","expiration","window","location","replace","error","lastErrorMessage","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\chizh\\source\\repos\\WebBeautyBook\\WebBeautyBook\\ClientApp\\src\\app\\auth\\login-page\\login-page.component.ts","C:\\Users\\chizh\\source\\repos\\WebBeautyBook\\WebBeautyBook\\ClientApp\\src\\app\\auth\\login-page\\login-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n  mForm: FormGroup;\n  lastErrorMessage: string = \"\";\n\n  constructor(private auth: AuthService, private formBuilder: FormBuilder, private router: Router) {\n    if(auth.hasToken()) router.navigate([\"/\"]);\n    this.mForm = formBuilder.group({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n\n  }\n\n  onSubmit() {\n    if (!this.mForm.valid) {\n      console.log(\"Error!\");\n      console.log(this.mForm);\n    } else {\n      console.log(\"Send!\");\n      this.auth.login(this.mForm.value)\n        .subscribe(resut => {\n          this.mForm.reset();\n          this.auth.saveToken(resut.token, resut.expiration);\n          window.location.replace(\"\");\n        }, error => {\n          this.lastErrorMessage = error.error;\n          console.log(error)\n        });\n    }\n  }\n}\n","<div class=\"container my-2\">\n    <h1>Hi Welcome Back</h1>\n    <h3>Login Here</h3>\n    <form [formGroup]=\"mForm\" (ngSubmit)=\"onSubmit()\">\n      <div>\n        <div class=\"col-md-4 mb-3\">\n          <label for=\"email\">Email</label>\n          <input formControlName=\"email\" class=\"form-control\" type=\"text\" *ngIf=\"mForm.controls['email'].valid || !mForm.controls['email'].touched\">\n          <div *ngIf=\"!mForm.controls['email'].valid && mForm.controls['email'].touched\">\n            <input formControlName=\"email\" class=\"form-control is-invalid\" type=\"text\">\n            <small style=\"color:red\" *ngIf=\"mForm.controls['email'].errors?.['required'] != undefined\">Email is required.</small>\n            <small style=\"color:red\" *ngIf=\"mForm.controls['email'].errors?.['email'] != undefined\">This isn't an email address.</small>\n          </div>\n          \n        </div>\n        <div class=\"col-md-4 mb-3\">\n          <label for=\"password\">Password</label>\n          <input formControlName=\"password\" class=\"form-control\" type=\"password\" *ngIf=\"mForm.controls['password'].valid || !mForm.controls['password'].touched\">\n          <div *ngIf=\"!mForm.controls['password'].valid && mForm.controls['password'].touched\">\n            <input formControlName=\"password\" class=\"form-control is-invalid\" type=\"password\">\n            <small style=\"color:red\" *ngIf=\"mForm.controls['password'].errors?.['required'] != undefined\">Password is required.</small>\n          </div>\n        </div>\n      </div>\n      \n      <p *ngIf=\"lastErrorMessage != ''\" style=\"color: red;\">{{lastErrorMessage}}</p>\n  \n      <button *ngIf=\"mForm.valid\" class=\"btn btn-primary\" type=\"submit\">SignIn</button>\n      <button *ngIf=\"!mForm.valid\" class=\"btn btn-primary\" type=\"submit\" disabled>SignIn</button>\n      \n      <span>\n        Don't have an account?\n        <a routerLink=\"/register\">Register</a>\n      </span>\n      <span>\n        <p></p>\n        <a routerLink=\"/forgotPassword\">Forgot password?</a>\n      </span>\n    </form>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}