{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Category } from 'src/app/models/Category';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction CategoryFormComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.header);\n  }\n}\nfunction CategoryFormComponent_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵtext(1, \"add\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CategoryFormComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵtext(1, \"add\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CategoryFormComponent_div_9_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵtext(1, \"update\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CategoryFormComponent_div_9_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵtext(1, \"update\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CategoryFormComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, CategoryFormComponent_div_9_button_1_Template, 2, 0, \"button\", 12);\n    i0.ɵɵtemplate(2, CategoryFormComponent_div_9_button_2_Template, 2, 0, \"button\", 13);\n    i0.ɵɵelementStart(3, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function CategoryFormComponent_div_9_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onCancel());\n    });\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.mForm.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.mForm.valid);\n  }\n}\nexport class CategoryFormComponent {\n  constructor(auth, http, baseUrl, dialg) {\n    this.auth = auth;\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.dialg = dialg;\n    this.isUpdateMode = false;\n    this.header = \"CategoryFormComponent\";\n    this.mForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(2)]),\n      categoryId: new FormControl('', [Validators.minLength(10)])\n    });\n  }\n  onSubmit() {\n    if (this.mForm.valid) {\n      if (this.isUpdateMode) {\n        //this.update();\n      } else {\n        this.insert();\n      }\n    } else {\n      console.log(\"TODO: processing Validators\");\n    }\n  }\n  onCancel() {}\n  insert() {\n    this.http.put(this.baseUrl + \"api/Category\", this.mForm.value, {\n      headers: this.auth.getHeadersWithToken()\n    }).subscribe(result => {\n      var newCategory = new Category();\n      newCategory.id = result['id'];\n      newCategory.name = this.mForm.controls['name'].getRawValue();\n      newCategory.categoryId = this.mForm.controls['categoryId'].getRawValue();\n      this.mForm.reset();\n      this.dialg.close();\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nCategoryFormComponent.ɵfac = function CategoryFormComponent_Factory(t) {\n  return new (t || CategoryFormComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i3.MatDialogRef));\n};\nCategoryFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CategoryFormComponent,\n  selectors: [[\"app-category-form\"]],\n  decls: 10,\n  vars: 5,\n  consts: [[\"class\", \"h5 text-center my-1\", 4, \"ngIf\"], [\"mat-dialog-content\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"my-2\"], [\"formControlName\", \"name\", \"placeholder\", \"name\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"categoryId\", \"placeholder\", \"categoryId\", \"type\", \"text\", 1, \"form-control\"], [\"mat-dialog-actions\", \"\", \"align\", \"end\"], [\"class\", \"btn btn-primary w-25\", \"type\", \"submit\", 4, \"ngIf\"], [\"class\", \"btn btn-primary w-25\", \"type\", \"submit\", \"disabled\", \"\", 4, \"ngIf\"], [\"mat-dialog-actions\", \"\", \"align\", \"end\", 4, \"ngIf\"], [1, \"h5\", \"text-center\", \"my-1\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-25\"], [\"type\", \"submit\", \"disabled\", \"\", 1, \"btn\", \"btn-primary\", \"w-25\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", \"class\", \"btn btn-primary mx-1\", \"type\", \"submit\", 4, \"ngIf\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", \"class\", \"btn btn-primary mx-1\", \"type\", \"submit\", \"disabled\", \"\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", \"mx-1\", 3, \"click\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mx-1\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", \"type\", \"submit\", \"disabled\", \"\", 1, \"btn\", \"btn-primary\", \"mx-1\"]],\n  template: function CategoryFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CategoryFormComponent_p_0_Template, 2, 1, \"p\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CategoryFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵtemplate(7, CategoryFormComponent_button_7_Template, 2, 0, \"button\", 6);\n      i0.ɵɵtemplate(8, CategoryFormComponent_button_8_Template, 2, 0, \"button\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, CategoryFormComponent_div_9_Template, 5, 2, \"div\", 8);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.header != \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.mForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUpdateMode && ctx.mForm.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUpdateMode && !ctx.mForm.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isUpdateMode);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i3.MatDialogContent, i3.MatDialogActions],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","Category","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","header","ɵɵtemplate","CategoryFormComponent_div_9_button_1_Template","CategoryFormComponent_div_9_button_2_Template","ɵɵlistener","CategoryFormComponent_div_9_Template_button_click_3_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","onCancel","ɵɵproperty","ctx_r3","mForm","valid","CategoryFormComponent","constructor","auth","http","baseUrl","dialg","isUpdateMode","name","required","minLength","categoryId","onSubmit","insert","console","log","put","value","headers","getHeadersWithToken","subscribe","result","newCategory","id","controls","getRawValue","reset","close","error","ɵɵdirectiveInject","i1","AuthService","i2","HttpClient","i3","MatDialogRef","selectors","decls","vars","consts","template","CategoryFormComponent_Template","rf","ctx","CategoryFormComponent_p_0_Template","CategoryFormComponent_Template_form_ngSubmit_1_listener","ɵɵelement","CategoryFormComponent_button_7_Template","CategoryFormComponent_button_8_Template","CategoryFormComponent_div_9_Template"],"sources":["C:\\Users\\chizh\\source\\repos\\WebBeautyBook\\WebBeautyBook\\ClientApp\\src\\app\\admin\\category-form\\category-form.component.ts","C:\\Users\\chizh\\source\\repos\\WebBeautyBook\\WebBeautyBook\\ClientApp\\src\\app\\admin\\category-form\\category-form.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Category } from 'src/app/models/Category';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { threadId } from 'worker_threads';\n\n@Component({\n  selector: 'app-category-form',\n  templateUrl: './category-form.component.html',\n  styleUrls: ['./category-form.component.css']\n})\nexport class CategoryFormComponent {\n  \n  public mForm: FormGroup;\n  public isUpdateMode:boolean = false; \n  public header: string = \"CategoryFormComponent\";\n\n  constructor(private auth: AuthService, private http : HttpClient, @Inject('BASE_URL') private baseUrl: string, private dialg: MatDialogRef<any>) {\n    this.mForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(2)]),\n      categoryId: new FormControl('', [Validators.minLength(10)])\n    });\n  }\n\n  public onSubmit(){\n    if(this.mForm.valid){\n      if(this.isUpdateMode){\n        //this.update();\n      }else{\n        this.insert();\n      }\n    }else{\n      console.log(\"TODO: processing Validators\");\n    }\n  }\n\n  public onCancel(){\n\n  }\n\n  private insert(){\n    this.http.put<any>(this.baseUrl + \"api/Category\", this.mForm.value,\n    {\n      headers: this.auth.getHeadersWithToken()\n    })\n    .subscribe(result => {\n      var newCategory = new Category();\n      newCategory.id = result['id'];\n      newCategory.name = this.mForm.controls['name'].getRawValue();\n      newCategory.categoryId = this.mForm.controls['categoryId'].getRawValue();\n      \n      this.mForm.reset();\n\n      this.dialg.close()\n\n    }, error => {\n      console.log(error);\n    });\n\n  }\n\n}\n","<p *ngIf=\"header != ''\" class=\"h5 text-center my-1\">{{header}}</p>\n<form mat-dialog-content [formGroup]=\"mForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group my-2\">\n        <input class=\"form-control\" formControlName=\"name\" placeholder=\"name\" type=\"text\">\n    </div>\n    <div class=\"form-group my-2\">\n      <input class=\"form-control\" formControlName=\"categoryId\" placeholder=\"categoryId\" type=\"text\">\n    </div>\n\n    <div mat-dialog-actions align=\"end\">\n        <button *ngIf=\"!isUpdateMode && mForm.valid\" class=\"btn btn-primary w-25\" type=\"submit\">add</button>\n        <button *ngIf=\"!isUpdateMode && !mForm.valid\" class=\"btn btn-primary w-25\" type=\"submit\" disabled>add</button>\n    </div>\n\n    <div *ngIf=\"isUpdateMode\" mat-dialog-actions align=\"end\">\n      <button mat-button cdkFocusInitial *ngIf=\"mForm.valid\" class=\"btn btn-primary mx-1\" type=\"submit\">update</button>\n      <button mat-button cdkFocusInitial *ngIf=\"!mForm.valid\" class=\"btn btn-primary mx-1\" type=\"submit\" disabled>update</button>\n      <button class=\"btn btn-primary mx-1\" (click)=\"onCancel()\">cancel</button>\n    </div>\n</form>    \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}